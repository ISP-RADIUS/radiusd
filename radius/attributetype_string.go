// Code generated by "stringer -type=AttributeType"; DO NOT EDIT

package radius

import "fmt"

const (
	_AttributeType_name_0 = "UserNameUserPasswordCHAPPasswordNASIPAddressNASPortServiceTypeFramedProtocolFramedIPAddressFramedIPNetmaskFramedRoutingFilterIdFramedMTUFramedCompressionLoginIPHostLoginServiceLoginTCPPort"
	_AttributeType_name_1 = "ReplyMessageCallbackNumberCallbackId"
	_AttributeType_name_2 = "FramedRouteFramedIPXNetworkStateClassVendorSpecificSessionTimeoutIdleTimeoutTerminationActionCalledStationIdCallingStationIdNASIdentifierProxyStateLoginLATServiceLoginLATNodeLoginLATGroupFramedAppleTalkLinkFramedAppleTalkNetworkFramedAppleTalkZoneAcctStatusTypeAcctDelayTimeAcctInputOctetsAcctOutputOctetsAcctSessionIdAcctAuthenticAcctSessionTimeAcctInputPacketsAcctOutputPacketsAcctTerminateCauseAcctMultiSessionIdAcctLinkCountAcctInputGigawordsAcctOutputGigawordsUnassigned1EventTimestampEgressVLANIDIngressFiltersEgressVLANNameUserPriorityTableCHAPChallengeNASPortTypePortLimitLoginLATPortTunnelTypeTunnelMediumTypeTunnelClientEndpointTunnelServerEndpointAcctTunnelConnectionTunnelPasswordARAPPasswordARAPFeaturesARAPZoneAccessARAPSecurityARAPSecurityDataPasswordRetryPromptConnectInfoConfigurationTokenEAPMessageMessageAuthenticatorTunnelPrivateGroupIDTunnelAssignmentIDTunnelPreferenceARAPChallengeResponseAcctInterimIntervalAcctTunnelPacketsLostNASPortIdFramedPoolCUITunnelClientAuthIDTunnelServerAuthIDNASFilterRuleUnassignedOriginatingLineInfoNASIPv6AddressFramedInterfaceIdFramedIPv6PrefixLoginIPv6HostFramedIPv6RouteFramedIPv6PoolErrorCauseEAPKeyNameDigestResponseDigestRealmDigestNonceDigestResponseAuthDigestNextnonceDigestMethodDigestURIDigestQopDigestAlgorithmDigestEntityBodyHashDigestCNonceDigestNonceCountDigestUsernameDigestOpaqueDigestAuthParamDigestAKAAutsDigestDomainDigestStaleDigestHA1SIPAORDelegatedIPv6PrefixMIP6FeatureVectorMIP6HomeLinkPrefixOperatorNameLocationInformationLocationDataBasicLocationPolicyRulesExtendedLocationPolicyRulesLocationCapableRequestedLocationInfoFramedManagementProtocolManagementTransportProtectioManagementPolicyIdManagementPrivilegeLevelPKMSSCertPKMCACertPKMConfigSettingsPKMCryptosuiteListPKMSAIDPKMSADescriptorPKMAuthKeyDSLiteTunnelNameMobileNodeIdentifierServiceSelectionPMIP6HomeLMAIPv6AddressPMIP6VisitedLMAIPv6AddressPMIP6HomeLMAIPv4AddressPMIP6VisitedLMAIPv4AddressPMIP6HomeHNPrefixPMIP6VisitedHNPrefixPMIP6HomeInterfaceIDPMIP6VisitedInterfaceIDPMIP6HomeIPv4HoAPMIP6VisitedIPv4HoAPMIP6HomeDHCP4ServerAddressPMIP6VisitedDHCP4ServerAddrePMIP6HomeDHCP6ServerAddressPMIP6VisitedDHCP6ServerAddreUnassignedStart"
	_AttributeType_name_3 = "UnassignedEndExperimentalStart"
	_AttributeType_name_4 = "ExperimentalEndImplementationSpecificStart"
	_AttributeType_name_5 = "ImplementationSpecificEndReservedStart"
	_AttributeType_name_6 = "ReservedEnd"
)

var (
	_AttributeType_index_0 = [...]uint8{0, 8, 20, 32, 44, 51, 62, 76, 91, 106, 119, 127, 136, 153, 164, 176, 188}
	_AttributeType_index_1 = [...]uint8{0, 12, 26, 36}
	_AttributeType_index_2 = [...]uint16{0, 11, 27, 32, 37, 51, 65, 76, 93, 108, 124, 137, 147, 162, 174, 187, 206, 228, 247, 261, 274, 289, 305, 318, 331, 346, 362, 379, 397, 415, 428, 446, 465, 476, 490, 502, 516, 530, 547, 560, 571, 580, 592, 602, 618, 638, 658, 678, 692, 704, 716, 730, 742, 758, 771, 777, 788, 806, 816, 836, 856, 874, 890, 911, 930, 951, 960, 970, 973, 991, 1009, 1022, 1032, 1051, 1065, 1082, 1098, 1111, 1126, 1140, 1150, 1160, 1174, 1185, 1196, 1214, 1229, 1241, 1250, 1259, 1274, 1294, 1306, 1322, 1336, 1348, 1363, 1376, 1388, 1399, 1408, 1414, 1433, 1450, 1468, 1480, 1499, 1511, 1535, 1562, 1577, 1598, 1622, 1650, 1668, 1692, 1701, 1710, 1727, 1745, 1752, 1767, 1777, 1793, 1813, 1829, 1852, 1878, 1901, 1927, 1944, 1964, 1984, 2007, 2023, 2042, 2069, 2097, 2124, 2152, 2167}
	_AttributeType_index_3 = [...]uint8{0, 13, 30}
	_AttributeType_index_4 = [...]uint8{0, 15, 42}
	_AttributeType_index_5 = [...]uint8{0, 25, 38}
	_AttributeType_index_6 = [...]uint8{0, 11}
)

func (i AttributeType) String() string {
	switch {
	case 1 <= i && i <= 16:
		i -= 1
		return _AttributeType_name_0[_AttributeType_index_0[i]:_AttributeType_index_0[i+1]]
	case 18 <= i && i <= 20:
		i -= 18
		return _AttributeType_name_1[_AttributeType_index_1[i]:_AttributeType_index_1[i+1]]
	case 22 <= i && i <= 161:
		i -= 22
		return _AttributeType_name_2[_AttributeType_index_2[i]:_AttributeType_index_2[i+1]]
	case 191 <= i && i <= 192:
		i -= 191
		return _AttributeType_name_3[_AttributeType_index_3[i]:_AttributeType_index_3[i+1]]
	case 223 <= i && i <= 224:
		i -= 223
		return _AttributeType_name_4[_AttributeType_index_4[i]:_AttributeType_index_4[i+1]]
	case 240 <= i && i <= 241:
		i -= 240
		return _AttributeType_name_5[_AttributeType_index_5[i]:_AttributeType_index_5[i+1]]
	case i == 254:
		return _AttributeType_name_6
	default:
		return fmt.Sprintf("AttributeType(%d)", i)
	}
}
